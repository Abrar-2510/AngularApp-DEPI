---
- name: Fail if OS is not Ubuntu 22.04
  fail:
    msg: "OS should be Ubuntu 22.04, not {{ ansible_distribution }} {{ ansible_distribution_version }}"
  when: ansible_distribution != 'Ubuntu' or ansible_distribution_version != '22.04'

- name: Update APT packages
  apt:
    update_cache: yes

- name: Disable SWAP (Kubeadm requirement)
  shell: swapoff -a

- name: Disable SWAP in fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Load required kernel modules
  copy:
    dest: /etc/modules-load.d/containerd.conf
    content: |
      overlay
      br_netfilter

- name: Configure Kubernetes sysctl params
  copy:
    dest: /etc/sysctl.d/99-kubernetes-cri.conf
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1

- name: Apply sysctl params
  command: sysctl --system

- name: Install required packages
  apt:
    name:
      - apt-transport-https
      - containerd.io
      - kubelet=1.29.*
      - kubeadm=1.29.*
    state: present
    update_cache: yes

- name: Configure containerd
  shell: /usr/bin/containerd config default > /etc/containerd/config.toml

- name: Enable systemd cgroup for Containerd
  replace:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup = false'
    replace: 'SystemdCgroup = true'

- name: Restart containerd
  systemd:
    name: containerd
    state: restarted
    enabled: yes

- name: Enable Kubelet
  systemd:
    name: kubelet
    enabled: yes

- name: Load br_netfilter module
  modprobe:
    name: br_netfilter
    state: present

- name: Reboot the node
  reboot:
