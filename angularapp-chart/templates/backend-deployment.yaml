apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: {{ .Values.backend.replicas }}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
      annotations:
        prometheus.io/scrape: "true"    # Enable Prometheus scraping
        prometheus.io/path: "/metrics"  # Define metrics endpoint
        prometheus.io/port: "3000"      # Set port for metrics collection
    spec:
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          env:
            - name: MYSQL_DATABASE
              value: "{{ .Values.mysql.database }}"
            - name: MYSQL_USER
              value: "{{ .Values.mysql.user }}"
            - name: MYSQL_PASSWORD
              value: "{{ .Values.mysql.password }}"
          ports:
            - containerPort: {{ .Values.backend.service.port }}
          readinessProbe:   # Ensure the pod is ready before accepting traffic
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:    # Restart pod if it becomes unresponsive
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 15
